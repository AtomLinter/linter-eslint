{
  "name": "linter-eslint",
  "main": "./src/main.js",
  "version": "8.4.1",
  "description": "Lint JavaScript on the fly, using ESLint",
  "repository": "https://github.com/AtomLinter/linter-eslint.git",
  "license": "MIT",
  "engines": {
    "atom": ">=1.13.0 <2.0.0"
  },
  "configSchema": {
    "scopes": {
      "title": "List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.",
      "type": "array",
      "default": [
        "source.js",
        "source.jsx",
        "source.js.jsx",
        "source.flow",
        "source.babel",
        "source.js-semantic"
      ],
      "items": {
        "type": "string"
      },
      "order": 1
    },
    "lintHtmlFiles": {
      "title": "Lint HTML Files",
      "description": "You should also add `eslint-plugin-html` to your .eslintrc plugins",
      "type": "boolean",
      "default": false,
      "order": 2
    },
    "autofix": {
      "type": "object",
      "order": 3,
      "title": "Automatic Fixes",
      "properties": {
        "fixOnSave": {
          "title": "Fix errors on save",
          "description": "Have eslint attempt to fix some errors automatically when saving the file.",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "ignoreFixableRulesWhileTyping": {
          "title": "Ignore fixable rules while typing",
          "description": "Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "rulesToDisableWhileFixing": {
          "title": "Disable specific rules from fixes",
          "description": "Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "order": 3
        }
      }
    },
    "global": {
      "type": "object",
      "order": 4,
      "title": "Global ESLint",
      "properties": {
        "useGlobalEslint": {
          "title": "Use global ESLint installation",
          "description": "Make sure you have it in your $PATH",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "eslintrcPath": {
          "title": ".eslintrc Path",
          "description": "It will only be used when there's no config file in project",
          "type": "string",
          "default": "",
          "order": 4
        },
        "globalNodePath": {
          "title": "Global Node Installation Path",
          "description": "Write the value of `npm get prefix` here",
          "type": "string",
          "default": "",
          "order": 2
        }
      }
    },
    "disabling": {
      "type": "object",
      "order": 5,
      "properties": {
        "disableWhenNoEslintConfig": {
          "title": "Disable when no ESLint config is found (in package.json or .eslintrc)",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "rulesToSilenceWhileTyping": {
          "title": "Silence specific rules while typing",
          "description": "Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "order": 2
        }
      }
    },
    "advanced": {
      "type": "object",
      "collapsed": true,
      "title": "Uncommon",
      "order": 6,
      "properties": {
        "disableEslintIgnore": {
          "title": "Don't use .eslintignore files",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "disableFSCache": {
          "title": "Disable FileSystem Cache",
          "description": "Paths of node_modules, .eslintignore and others are normally cached",
          "type": "boolean",
          "default": false,
          "order": 2
        },
        "showRuleIdInMessage": {
          "title": "Show Rule ID in Messages",
          "type": "boolean",
          "default": true,
          "order": 3
        },
        "eslintRulesDirs": {
          "title": "ESLint Rules Directories",
          "description": "Specify a comma separated list of directories for ESLint to load rules from.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "order": 4
        },
        "localNodeModules": {
          "title": "Path to the local node_modules folder",
          "description": "Optionally specify the path to the local node_modules folder",
          "type": "string",
          "default": "",
          "order": 5
        }
      }
    }
  },
  "scripts": {
    "test": "apm test",
    "lint": "eslint ."
  },
  "dependencies": {
    "atom-babel6-transpiler": "1.2.0",
    "atom-linter": "10.0.0",
    "atom-package-deps": "4.6.2",
    "babel-preset-env": "1.7.0",
    "consistent-path": "2.0.3",
    "crypto-random-string": "1.0.0",
    "eslint": "4.19.1",
    "eslint-rule-documentation": "1.0.21",
    "fs-plus": "3.1.1",
    "resolve-env": "1.0.0",
    "user-home": "2.0.0"
  },
  "devDependencies": {
    "@commitlint/cli": "7.2.1",
    "@commitlint/config-conventional": "7.1.2",
    "@commitlint/travis-cli": "7.2.1",
    "eslint-config-airbnb-base": "13.1.0",
    "eslint-plugin-import": "2.14.0",
    "husky": "1.1.3",
    "jasmine-fix": "1.3.1",
    "rimraf": "2.6.2"
  },
  "package-deps": [
    "linter:2.0.0"
  ],
  "providedServices": {
    "linter": {
      "versions": {
        "2.0.0": "provideLinter"
      }
    }
  },
  "eslintConfig": {
    "rules": {
      "no-console": "off",
      "semi": [
        "error",
        "never"
      ],
      "comma-dangle": "off",
      "global-require": "off",
      "import/no-unresolved": [
        "error",
        {
          "ignore": [
            "atom"
          ]
        }
      ],
      "object-curly-newline": [
        "error",
        {
          "ObjectExpression": {
            "minProperties": 5,
            "multiline": true,
            "consistent": true
          },
          "ObjectPattern": {
            "minProperties": 5,
            "multiline": true,
            "consistent": true
          }
        }
      ]
    },
    "extends": "airbnb-base",
    "globals": {
      "atom": "true"
    },
    "env": {
      "node": true,
      "browser": true
    }
  },
  "atomTranspilers": [
    {
      "glob": "{src,spec}/*.js",
      "transpiler": "atom-babel6-transpiler",
      "options": {
        "setBabelEnv": false,
        "babel": {
          "presets": [
            [
              "env",
              {
                "targets": {
                  "node": "current"
                }
              }
            ]
          ],
          "sourceMaps": "inline",
          "babelrc": false
        },
        "cacheKeyFiles": [
          "package.json"
        ]
      }
    }
  ],
  "renovate": {
    "extends": [
      "config:base"
    ]
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  }
}
